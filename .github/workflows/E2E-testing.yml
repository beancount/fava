name: Deploy testing environment to EC2

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    outputs:
      Fava_image_tag: ${{ steps.docker_image_build.outputs.tag }}

    steps:
      - name: Checkout repository (ahdsab/Fava)
        uses: actions/checkout@v4

      - name: Build and push Docker image
        id: docker_image_build
        run: |
          echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

          # Use short commit SHA (first 7 characters)
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
          TAG="${SHORT_SHA}-$(date +%Y%m%d-%H%M%S)"
          echo "tag=$TAG" >> $GITHUB_OUTPUT

          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/fava:$TAG .

          docker push ${{ secrets.DOCKERHUB_USERNAME }}/fava:$TAG

          # Save the tag for later steps
          echo "FAVA_IMAGE_TAG=$TAG" >> $GITHUB_ENV

      - name: deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.FAVA_EC2_HOST_IP }}
          username: ubuntu
          key: ${{ secrets.Fava_EC2_SSH_KEY }}
          script: |
            echo "${{ secrets.DOCKERHUB_PASSWORD }}" | sudo docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

            # Clean up everything including named volumes
            sudo docker volume rm $(sudo docker volume ls -q) 2>/dev/null || true

            sudo docker stop $(sudo docker ps -aq) 2>/dev/null || true
            sudo docker rm $(sudo docker ps -aq) 2>/dev/null || true

            # Remove all images to free space
            sudo docker rmi $(sudo docker images -q) 2>/dev/null || true

            # Clean up networks (volumes already removed above)
            sudo docker network prune -f || true

            sudo docker run -d --rm -p  5001:5000 ${{ secrets.DOCKERHUB_USERNAME }}/fava:${{ env.FAVA_IMAGE_TAG }}

  api-tests:
    needs: deploy
    runs-on: ubuntu-latest

    env:
      BASE_URL: "http://54.73.240.131:5001"               # Fava host:port
      LEDGER_SLUG: "example-beancount-file"               # URL prefix in your paths

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          repository: ahdsab/FavaTesting
          token: ${{ secrets.TESTING_GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install allure-pytest

      - name: Run API tests
        env:
          BASE_URL: ${{ env.BASE_URL }}
          LEDGER_SLUG: ${{ env.LEDGER_SLUG }}
        run: |
          
          cd API_Testing
          pytest --alluredir=../allure-results-api -q
      
      - name: Upload API test results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-api
          path: allure-results-api/
          retention-days: 30

  ui-tests:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 1 # Fetch only the latest commit to speed up the checkout process
          repository: ahdsab/FavaTesting
          token: ${{ secrets.TESTING_GITHUB_TOKEN }}  # Use the token to access the repo
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install allure-pytest

      - name: Set up Google Chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: stable

      - name: Install Xvfb (virtual display)
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Run Selenium tests (with virtual display)
        env:
          HEADLESS: "true"
          Fava_URL: http://54.73.240.131:5001/example-beancount-file/income_statement/
        run: |
          ls
          cd UI_Testing
          pytest --alluredir=../allure-results-ui
      
      - name: Upload UI test results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-ui
          path: allure-results-ui/
          retention-days: 30 
    
  allure-report:
    runs-on: ubuntu-latest
    needs: [api-tests, ui-tests]
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all Allure results
        uses: actions/download-artifact@v4
        with:
          pattern: allure-results-*
          path: allure-results
          merge-multiple: true

      - name: Generate and Deploy Allure Report
        uses: simple-elf/allure-report-action@master
        with:
          allure_results: allure-results
          allure_report: allure-report
          gh_pages: gh-pages
          allure_history: allure-history
          keep_reports: 20

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.UI_TESTING_GITHUB_TOKEN }}
          publish_dir: allure-history
