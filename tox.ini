[tox]
envlist = lint,py,old_deps
isolated_build = True

[testenv]
passenv = SNAPSHOT_UPDATE
# ensure that package deps match the explicit tox env deps:
constrain_package_deps = true
# use a constraints file for tox env and package deps:
setenv = PIP_CONSTRAINT=constraints.txt
extras = excel
deps =
    pytest
    pytest-cov
commands =
    pytest --cov=fava --cov-report=html --cov-fail-under=90 {posargs:tests}

[testenv:old_deps]
setenv =
    SNAPSHOT_IGNORE=true
    PIP_CONSTRAINT=constraints-old.txt
deps =
    pytest
commands =
    pytest {posargs:tests}

[coverage:run]
branch = True
source = fava
omit =
    */fava/beans/types.py
    */fava/ext/auto_commit.py

[coverage:paths]
source = src
paths =
    src/fava
    .tox/*/fava

[testenv:docs]
deps =
    sphinx
commands =
    python docs/generate.py
    sphinx-build -b html docs build/docs

[testenv:lint]
deps =
    flake8
    flake8-pyi
    mypy
    pylint
    pytest
    types-babel
    types-pkg_resources
    types-simplejson
commands =
    flake8 stubs
    mypy src/fava tests
    pylint src/fava

[flake8]
exclude = node_modules
ignore =
# whitespace before ':' (black)
    E203
# disabled for stubs
    E302
# disabled for stubs
    E305
# disabled for stubs
    E701
# disabled for stubs
    E704
# line break before binary operator (black)
    W503

[testenv:build-dist]
skip_install = True
deps =
    Babel
    build
    twine
commands =
    pybabel compile -d src/fava/translations
    python -m build
    twine check dist/*

[testenv:pyinstaller]
deps =
    pyinstaller
    pytest
allowlist_externals = {toxinidir}/dist/fava
commands =
    pyinstaller --clean --noconfirm contrib/pyinstaller_spec.spec
    {toxinidir}/dist/fava --version

[pytest]
filterwarnings =
    ignore:.*locked_cached_property.*deprecated:DeprecationWarning
